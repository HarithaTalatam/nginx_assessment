http {
    # Here I am Defining a custom log format name called 'custom'.
    log_format custom '$time_local $nginx_version $remote_addr $request_id $status $body_bytes_sent "$http_user_agent" $proxy_protocol_addr $server_name $upstream_addr $request_time $upstream_connect_time $upstream_header_time $upstream_response_time "$request" $upstream_status $ssl_session_reused "$http_x_forwarded_for"';

    # mentionting the global access log path along with the format in the access.log file .
    access_log /var/log/nginx/access.log custom;

    # This is the start point of the server block
    server {
        # Listening on port: 80.
        listen 80;

        # Defined server name as "server_name".
        server_name your_server_name;

        # In this block it returns a 404 error for these file types mentioned in the ().
        location ~* \.(css|jpg|jpeg|js|json|png|mp4|pdf)$ {
            return 404;
        }

        # This is the Location block i wrote to pass the request.
        location / {
            # Proxy passing the requests to an upstream server.
            proxy_pass http://your_upstream_server;

            # Adding various security headers to the response using If else conditional statements.
            if ($sent_http_strict_transport_security = "") {
                add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
            }
            if ($sent_http_x_content_type_options = "") {
                add_header X-Content-Type-Options "nosniff" always;
            }
            if ($sent_http_x_xss_protection = "") {
                add_header X-XSS-Protection "1; mode=block" always;
            }
            if ($sent_http_x_frame_options = "") {
                add_header X-Frame-Options "DENY" always;
            }
            if ($sent_http_content_security_policy = "") {
                add_header Content-Security-Policy "frame-ancestors 'none'" always;
            }
            if ($sent_http_access_control_allow_credentials = "") {
                add_header Access-Control-Allow-Credentials "TRUE" always;
            }
            

            # Set headers to be forwarded to the upstream server.
            proxy_set_header X-Real-IP $remote_addr; # Forward the client's real IP.
            proxy_set_header Host $host; # Forward the request's host header.
        }
    }
}
